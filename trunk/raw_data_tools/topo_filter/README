README                                                                09.08.2013

                         *****************************
                         *  3 km filtering of GLOBE  *
                         *****************************

The scripts in this directory can be used to filter the raw GLOBE data set.
The files filter_A-P.ncl mainly read the corresponding GLOBE tile and its
neighbours and writes out a new netCDF file in the end. The actual filtering is
performed by the external routine lanczos_window.so or tukey_filter.so. These 
are FORTRAN 90 routines, that can be used by NCL.
In order to produce the lanczos_window.so/tukey_filter.so, the two files 
lanczos_window.f90 (tukey_filter.f90) and the lanczos_window.stub 
(tukey_filter.stub) are needed. With the following command these two files can 
be transformed into a *.so file:

WRAPIT -gf lanczos_window.stub lanczos_window.f90   (GNU compiler)
or
WRAPIT -gf tukey_filter.stub tukey_filter.f90   (GNU compiler)

It is RECOMMENDED to use the LANCZOS filter, as it is closer to the operational
filter (for more information read the document given below).


filter_A-P.ncl:
---------------
Theses scripts read the desired region and the required boarders to perform the
filtering. For each GLOBE tile there is one script.
As the number of grid points used to average 3 km is increasing with higher 
latitudes and reaches infinity at the poles the filtering is only done up to the
85th degree south and north. Thus the script checks if a cutting at 85 degrees 
is needed or not.
The sea points are set from -500 to 0. This is done because averaging can lead 
to landpoints attaining a value far below 0.
As soon as the filtering domain is ready an external FORTRAN 90 routine is 
called, that filters the topography. The filter is written in FORTRAN 90 due to
performance reasons.
As the small scales only vanish if the filter is applied several times, there 
are four filtering iterations. Sea points are set back to sea level after every
iteration. 
Finally the scripts write out the new filtered GLOBE tiles.

input: /store/s83/tsm/extpar/raw_data_nc/GLOBE_A_P10.nc
       external EX01 "./lanczos_window.so"
       or
       external EX01 "./tukey_filter.so"

output: GLOBE_A-P_filt_lanczos_window.nc
	or
	GLOBE_A-P_filt_tukey_0.75_3.0_it4.nc


lanczos_window.f90:
-------------------
The function of the lanczos_window is used to weight the gridpoints needed to average 3 kilometers, as gridpoints far away from the central point are less important.
Some information about the lanczos_window can be found here: 
http://en.wikipedia.org/wiki/Lanczos_resampling (accessed on the 22. Aug. 2013)
The filtering distance is ~3 km, which corresponds to 3 grid points in the north
south direction for GLOBE. The number of grid points used to obtain 3 km in east
west direction depends on the latitude.
x ranges from - (number_of_gridpoints - 1)/2 to (number_of_gridpoints - 1)/2.
a is the total number of gridpoints.
The filter distance can be changed in the variable: wave_l = 3.0 [km]
Be aware that the wave_l parameter must attain a certain value, such that the 
number of latitude grid points is an odd number.


tukey_filter.f90:
-----------------
The tukey filter is based on the tukey window or the tapered cosine window. 
This function is used to give the grid points needed to average the 3 kilometers
a weight. Grid points that are far away from the central point are less 
important.
Some information on the tukey window can be found here:
http://en.wikipedia.org/wiki/Window_function#Tukey_window 
(accessed on 09. Aug. 2013)
The filtering distance is ~3 km, which corresponds to 3 grid points in the north
south direction for GLOBE. The number of grid points used to obtain 3 km in east
west direction depends on the latitude.
N in the tukey function represents the total number of grid points used to 
obtain the 3 km. The weighting factors are always calculated seperately for both
directions and are then multiplied.
Alpha is set to 0.75.
The filter distance can be changed in the variable: wave_l = 3.0 [km]
Be aware that the wave_l parameter must attain a certain value, such that the 
number of latitude grid points is an odd number.

You can find some more information about these filters and its validation in the
following file:

------------------------------------------------------------------------------
/users/tsm/project/extpar/documentation/filtering_3_km_of_GLOBE_topography.pdf
------------------------------------------------------------------------------
