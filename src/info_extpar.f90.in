MODULE info_extpar

  USE mo_logging

  IMPLICIT NONE

  PRIVATE

  PUBLIC :: info_print

  CHARACTER (len=*), PARAMETER :: INFO_PackageName     = ''
  CHARACTER (len=*), PARAMETER :: INFO_RepositoryURL   = ''
  CHARACTER (len=*), PARAMETER :: INFO_LastCommitDate  = ''
  CHARACTER (len=*), PARAMETER :: INFO_RevisionHash    = ''
  CHARACTER (len=*), PARAMETER :: INFO_CodeIsModified  = ''
  CHARACTER (len=*), PARAMETER :: INFO_CompilerVersion = ''
  CHARACTER (len=*), PARAMETER :: INFO_CompiledBy      = ''
  CHARACTER (len=*), PARAMETER :: INFO_CompileTime     = ''
  CHARACTER (len=*), PARAMETER :: INFO_CompileMachine  = ''

  CHARACTER (len=16)   :: INFO_StartTime = ''
  CHARACTER (len=1024) :: INFO_BinaryName  = ''

CONTAINS

  SUBROUTINE info_print

    CHARACTER (len=8)    :: date
    CHARACTER (len=10)   :: time
    CHARACTER (len=1024) :: arg0
    INTEGER :: len_arg0

    if ( LEN_TRIM(INFO_StartTime) == 0 ) THEN
      CALL date_and_time(date, time)
      INFO_StartTime = date(1:4) // '-' // date(5:6) // '-' // date(7:8) // &
           &    ' ' // time(1:2) // ':' // time(3:4)
    END IF
    CALL get_command_argument(0, arg0, len_arg0)
    INFO_BinaryName = arg0(1:len_arg0)

    CALL logging%info('', __FILE__, __LINE__)
    CALL logging%info('==== Code information used to build this binary ====', __FILE__, __LINE__)
    CALL logging%info('', __FILE__, __LINE__)
    CALL logging%info('Compile-Date ......: ' // INFO_CompileTime(1:LEN_TRIM(INFO_CompileTime)), __FILE__, __LINE__)
    CALL logging%info('Code is modified ..: ' // INFO_CodeIsModified(1:LEN_TRIM(INFO_CodeIsModified)), __FILE__, __LINE__)
    CALL logging%info('Library name ......: ' // INFO_PackageName(1:LEN_TRIM(INFO_PackageName)), __FILE__, __LINE__)
    CALL logging%info('Compiled on .......: ' // INFO_CompileMachine(1:LEN_TRIM(INFO_CompileMachine)), __FILE__, __LINE__)
    CALL logging%info('Revision number ...: ' // INFO_RevisionHash(1:LEN_TRIM(INFO_RevisionHash)), __FILE__, __LINE__)
    CALL logging%info('Checkout-Date .....: ' // INFO_LastCommitDate(1:LEN_TRIM(INFO_LastCommitDate)), __FILE__, __LINE__)
    CALL logging%info('Binary name .......: ' // INFO_BinaryName(1:LEN_TRIM(INFO_BinaryName)), __FILE__, __LINE__)
    CALL logging%info('Compiled by .......: ' // INFO_CompiledBy(1:LEN_TRIM(INFO_CompiledBy)), __FILE__, __LINE__)
    CALL logging%info('Compiler version ..: ' // INFO_CompilerVersion(1:LEN_TRIM(INFO_CompilerVersion)), __FILE__, __LINE__)
    CALL logging%info('Current start time : ' // INFO_StartTime(1:LEN_TRIM(INFO_StartTime)), __FILE__, __LINE__)
    CALL logging%info('==== End of code information ====', __FILE__, __LINE__)
    CALL logging%info('', __FILE__, __LINE__)

  END SUBROUTINE info_print

END MODULE info_extpar
