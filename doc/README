This workbench contains the code for the library extpar
with revision V1_13.

The workbench has been isolated from the original source, which is
stored in an version control system at the Deutscher Wetterdienst
(DWD). Therefore the complete code necessary to create all the programs
for this library and version is kept within the current directory
structure. Due to this fact you will not be able to do an easy update
to another version with this workbench.

Additionally to the necessary source code you will find the files
FileNames, LinkLibs, Makefile, ODependencies, Objfiles and Options
within this directory. The subdirectory Local is used to store some
other, machine dependent files.

These files are necessary to compile the source and create the
binar(y/ies). For doing this the file Makefile will be read by the
command 'make' or 'gmake'. This makefile includes the files Options,
Objfiles, LinkLibs, FileNames and ODependencies.

The subdirectory Local is used to store the machine dependent files
for several different machine types or installations. Where the files
ODependencies and Objfiles are local files, the files FileNames,
LinkLibs and Options are machine dependent files. The machine dependent
files are no plain files, but soft links to the files of one specific
machine which resides in the subdirectory Local. You may choose the one
of them with the best match of your needs and modify it.


The file ODependencies explains a list of dependencies for creating
the object files from source. It should be left unmodified.

The file Objfiles keeps a list of all object files which are necessary
to create the binar(y/ies). It should be left unmodified, too.

The content of the file FileNames defines the names of all the binaries
to create, the names of the equivalent loadmaps and the name of the
newly created object library.
The list of full path names of the binary names must be defined within
the variable BINARIES;
the list of full path names of the loadmaps must be defined within the
variable LOADMAPS and
the full path name of the new object library must be defined within the
variable NEWLIB.
For naming these variables other pre-defined variables of the makefile
may be used.
Usually there is no need to change anything of these definitions.

The content of the file LinkLibs defines the list of directories where
the necessary object libraries resides, the list of object libraries
itself and a list of plain object files necessary for creating the
binar(y/ies) for the specified machine.
The list of directories must be defined within the variable LIBPATHS;
the list of object libraries must be defined within the variable LIBS
and the list of additional object files must be defined within the
variable EXTOBJ.
In most cases you have to adapt all the path names within these variable
definitions.
For naming these variables other pre-defined variables of the makefile
may be used.

The content of the file Options defines a lot of compiler directives
for special cases. They have to be adapted to your local compiler.
The descriptions are:
FTNCALL   # Defines the Fortran compiler call which will be used for
            compiling and linking.
FTNVERS   # Defines the directives for the Fortran compiler to show
            its version. This may be empty.
FTNLST    # Defines the directives for the Fortran compiler to create
            a compile listing.
FTNDEB    # Defines the directives for the Fortran compiler to insert
            debug code into the binary.
FTNANSI   # Defines the directives for the Fortran compiler to do ANSI
            checkings.
FTNOPTS   # Defines the default compiler options for the Fortran
            compiler.
FTNOPTS2  # Defines the alternate compiler options for the Fortran
            compiler.
FTNOPTS3  # Defines the 2nd alternate compiler options for the Fortran
            compiler.
FTNOPTS4  # Defines the 3rd alternate compiler options for the Fortran
            compiler.
LINKOPTS  # Defines additional compiler options for the linking state.
C*        # Definitions for the C compiler. These are currently unused.
Within FTNCALL a valid compiler call has to be defined. All the other
variables may be empty or commented out, which produce the same results.
For naming these variables other pre-defined variables of the makefile
may be used.

The files within the subdirectory Local may be adapted to your
installation. To adapt the workbench for your installation, please set
the links to one set of files with descriptions nearest to your machine.
Now, you have to adapt these files to reflect your local installations.
After adapting these files to your needs you will be able to compile
and link the code of this workbench by typing: make all or gmake all .

--- CAUTION ---
Be careful on modifying anything of the source code. There will be
no save copy within this workbench. Every modification will be done
directly within the original code. Therefore please save the code
BEFORE any modification!


This workbench had been automatically created and is not proved.
Therefore it is distributed AS IS.
For creating the makefile and the additional files used the
configuration files of the library with state from 2013-05-31 have been
used. For more information on the created makefile and environment
don't hesitate to write to Michael Gertz (DWD).
email: Michael.Gertz@dwd.de
